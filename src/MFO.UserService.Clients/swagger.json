{
  "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "User Service API",
    "description": "An ASP.NET Core Web API for managing Users",
    "contact": {
      "name": "Mihai Negrisan",
      "url": "https://github.com/mihainegrisan?tab=overview"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a user by their unique identifier.",
        "description": "Sample request:\n            \n    GET api/users/3bda226a-d2fc-477f-a545-7b4dd45df670",
        "operationId": "Users_GetUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the user with the corresponding id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "If the user wasn't found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates a User.",
        "description": "Sample request:\n\n    PUT api/users/3bda226a-d2fc-477f-a545-7b4dd45df670\n    {\n       \"firstName\": \"Mihai\",\n       \"lastName\": \"N\",\n       \"email\": \"random1@gmail.com\",\n       \"password\": \"test1234\",\n       \"isActive\": true\n    }",
        "operationId": "Users_UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Returns the updated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          },
          "400": {
            "description": "If it fails to update the user due to validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "If no user is found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a User (hard).",
        "description": "Sample request:\n\n    DELETE api/users/3bda226a-d2fc-477f-a545-7b4dd45df670",
        "operationId": "Users_HardDeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns ok"
          },
          "400": {
            "description": "If it fails to delete the user due to other errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If no user is found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/search": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a user by their email.",
        "description": "Sample request:\n            \n    POST api/users",
        "operationId": "Users_GetUserByEmail",
        "requestBody": {
          "x-name": "user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserByEmailDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Returns the user with the corresponding email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "If the user wasn't found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetAllUsers",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IError"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a User.",
        "description": "Sample request:\n            \n    POST api/users\n    {\n       \"firstName\": \"Mihai\",\n       \"lastName\": \"N\",\n       \"email\": \"random1@gmail.com\",\n       \"password\": \"test1234\"\n    }",
        "operationId": "Users_CreateUser",
        "requestBody": {
          "x-name": "user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns the newly created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          },
          "400": {
            "description": "If it fails to create the user due to validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/deactivate/{id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deactivates a User (soft delete).",
        "description": "Sample request:\n\n    DELETE api/users/deactivate/3bda226a-d2fc-477f-a545-7b4dd45df670",
        "operationId": "Users_DeactivateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the deactivated user"
          },
          "400": {
            "description": "If it fails to deactivate the user due to other errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If no user is found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetUserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "fullName": {
            "type": "string"
          }
        }
      },
      "IError": {
        "type": "object",
        "description": "Definition of an error",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "reasons": {
            "type": "array",
            "description": "Reasons of the error",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IError"
            }
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetUserByEmailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "CreateUserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      }
    }
  }
}